{"version":3,"sources":["jquery.slicknav.js"],"names":["$","document","defaults","label","duplicate","duration","easingOpen","easingClose","closedSymbol","openedSymbol","prependTo","appendTo","parentTag","closeOnClick","allowParentLinks","nestedParentLinks","showChildren","removeIds","removeClasses","removeStyles","brand","animations","init","beforeOpen","beforeClose","afterOpen","afterClose","mobileMenu","prefix","Keyboard","Plugin","element","options","this","settings","extend","hasOwnProperty","_defaults","_name","prototype","iconClass","$this","menu","mobileNav","clone","removeAttr","find","each","i","e","attr","menuBar","append","btn","join","prepend","items","containsAnchor","nodes","arrowElement","item","data","children","length","a","contents","is","push","wrapElement","wrapAll","parent","addClass","wrap","last","after","click","event","target","closest","hasClass","_visibilityToggle","mousedown","_outlines","keyup","preventDefault","_menuToggle","on","_itemClick","keydown","ev","keyCode","next","first","focus","nextIdx","idx","allItems","index","eq","prev","stopImmediatePropagation","el","removeClass","arrow","ul","html","animate","trigger","_getActionItems","_setVisAttr","hide","stop","slideDown","velocity","easing","complete","slideUp","hidden","nonHidden","not","anchors","links","add","state","css","toggle","open","close","fn","returns","args","arguments","undefined","instance","apply","Array","slice","call","jQuery","window","slicknav","$menuItemsWithChildren","hover"],"mappings":"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","file":"main.js","sourcesContent":["/*!\n * SlickNav Responsive Mobile Menu v1.0.10\n * (c) 2016 Josh Cope\n * licensed under MIT\n */\n;(function ($, document, window) {\n    var\n    // default settings object.\n        defaults = {\n            label: 'MENU',\n            duplicate: true,\n            duration: 200,\n            easingOpen: 'swing',\n            easingClose: 'swing',\n            closedSymbol: '&#9658;',\n            openedSymbol: '&#9660;',\n            prependTo: 'body',\n            appendTo: '',\n            parentTag: 'a',\n            closeOnClick: false,\n            allowParentLinks: false,\n            nestedParentLinks: true,\n            showChildren: false,\n            removeIds: true,\n            removeClasses: false,\n            removeStyles: false,\n\t\t\tbrand: '',\n            animations: 'jquery',\n            init: function () {},\n            beforeOpen: function () {},\n            beforeClose: function () {},\n            afterOpen: function () {},\n            afterClose: function () {}\n        },\n        mobileMenu = 'slicknav',\n        prefix = 'slicknav',\n\n        Keyboard = {\n            DOWN: 40,\n            ENTER: 13,\n            ESCAPE: 27,\n            LEFT: 37,\n            RIGHT: 39,\n            SPACE: 32,\n            TAB: 9,\n            UP: 38,\n        };\n\n    function Plugin(element, options) {\n        this.element = element;\n\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n\n        // Don't remove IDs by default if duplicate is false\n        if (!this.settings.duplicate && !options.hasOwnProperty(\"removeIds\")) {\n          this.settings.removeIds = false;\n        }\n\n        this._defaults = defaults;\n        this._name = mobileMenu;\n\n        this.init();\n    }\n\n    Plugin.prototype.init = function () {\n        var $this = this,\n            menu = $(this.element),\n            settings = this.settings,\n            iconClass,\n            menuBar;\n\n        // clone menu if needed\n        if (settings.duplicate) {\n            $this.mobileNav = menu.clone();\n        } else {\n            $this.mobileNav = menu;\n        }\n\n        // remove IDs if set\n        if (settings.removeIds) {\n          $this.mobileNav.removeAttr('id');\n          $this.mobileNav.find('*').each(function (i, e) {\n              $(e).removeAttr('id');\n          });\n        }\n\n        // remove classes if set\n        if (settings.removeClasses) {\n            $this.mobileNav.removeAttr('class');\n            $this.mobileNav.find('*').each(function (i, e) {\n                $(e).removeAttr('class');\n            });\n        }\n\n        // remove styles if set\n        if (settings.removeStyles) {\n            $this.mobileNav.removeAttr('style');\n            $this.mobileNav.find('*').each(function (i, e) {\n                $(e).removeAttr('style');\n            });\n        }\n\n        // styling class for the button\n        iconClass = prefix + '_icon';\n\n        if (settings.label === '') {\n            iconClass += ' ' + prefix + '_no-text';\n        }\n\n        if (settings.parentTag == 'a') {\n            settings.parentTag = 'a href=\"#\"';\n        }\n\n        // create menu bar\n        $this.mobileNav.attr('class', prefix + '_nav');\n        menuBar = $('<div class=\"' + prefix + '_menu\"></div>');\n\t\tif (settings.brand !== '') {\n\t\t\tvar brand = $('<div class=\"' + prefix + '_brand\">'+settings.brand+'</div>');\n\t\t\t$(menuBar).append(brand);\n\t\t}\n        $this.btn = $(\n            ['<' + settings.parentTag + ' aria-haspopup=\"true\" role=\"button\" tabindex=\"0\" class=\"' + prefix + '_btn ' + prefix + '_collapsed\">',\n                '<span class=\"' + prefix + '_menutxt\">' + settings.label + '</span>',\n                '<span class=\"' + iconClass + '\">',\n                    '<span class=\"' + prefix + '_icon-bar\"></span>',\n                    '<span class=\"' + prefix + '_icon-bar\"></span>',\n                    '<span class=\"' + prefix + '_icon-bar\"></span>',\n                '</span>',\n            '</' + settings.parentTag + '>'\n            ].join('')\n        );\n        $(menuBar).append($this.btn);\n        if(settings.appendTo !== '') {\n            $(settings.appendTo).append(menuBar);\n        } else {\n            $(settings.prependTo).prepend(menuBar);\n        }\n        menuBar.append($this.mobileNav);\n\n        // iterate over structure adding additional structure\n        var items = $this.mobileNav.find('li');\n        $(items).each(function () {\n            var item = $(this),\n                data = {};\n            data.children = item.children('ul').attr('role', 'menu');\n            item.data('menu', data);\n\n            // if a list item has a nested menu\n            if (data.children.length > 0) {\n\n                // select all text before the child menu\n                // check for anchors\n\n                var a = item.contents(),\n                    containsAnchor = false,\n                    nodes = [];\n\n                $(a).each(function () {\n                    if (!$(this).is('ul')) {\n                        nodes.push(this);\n                    } else {\n                        return false;\n                    }\n\n                    if($(this).is(\"a\")) {\n                        containsAnchor = true;\n                    }\n                });\n\n                var wrapElement = $(\n                    '<' + settings.parentTag + ' role=\"menuitem\" aria-haspopup=\"true\" tabindex=\"-1\" class=\"' + prefix + '_item\"/>'\n                );\n\n                // wrap item text with tag and add classes unless we are separating parent links\n                if ((!settings.allowParentLinks || settings.nestedParentLinks) || !containsAnchor) {\n                    var $wrap = $(nodes).wrapAll(wrapElement).parent();\n                    $wrap.addClass(prefix+'_row');\n                } else\n                    $(nodes).wrapAll('<span class=\"'+prefix+'_parent-link '+prefix+'_row\"/>').parent();\n\n                if (!settings.showChildren) {\n                    item.addClass(prefix+'_collapsed');\n                } else {\n                    item.addClass(prefix+'_open');\n                }\n\n                item.addClass(prefix+'_parent');\n\n                // create parent arrow. wrap with link if parent links and separating\n                var arrowElement = $('<span class=\"'+prefix+'_arrow\">'+(settings.showChildren?settings.openedSymbol:settings.closedSymbol)+'</span>');\n\n                if (settings.allowParentLinks && !settings.nestedParentLinks && containsAnchor)\n                    arrowElement = arrowElement.wrap(wrapElement).parent();\n\n                //append arrow\n                $(nodes).last().after(arrowElement);\n\n\n            } else if ( item.children().length === 0) {\n                 item.addClass(prefix+'_txtnode');\n            }\n\n            // accessibility for links\n            item.children('a').attr('role', 'menuitem').click(function(event){\n                //Ensure that it's not a parent\n                if (settings.closeOnClick && !$(event.target).parent().closest('li').hasClass(prefix+'_parent')) {\n                        //Emulate menu close if set\n                        $($this.btn).click();\n                    }\n            });\n\n            //also close on click if parent links are set\n            if (settings.closeOnClick && settings.allowParentLinks) {\n                item.children('a').children('a').click(function (event) {\n                    //Emulate menu close\n                    $($this.btn).click();\n                });\n\n                item.find('.'+prefix+'_parent-link a:not(.'+prefix+'_item)').click(function(event){\n                    //Emulate menu close\n                        $($this.btn).click();\n                });\n            }\n        });\n\n        // structure is in place, now hide appropriate items\n        $(items).each(function () {\n            var data = $(this).data('menu');\n            if (!settings.showChildren){\n                $this._visibilityToggle(data.children, null, false, null, true);\n            }\n        });\n\n        // finally toggle entire menu\n        $this._visibilityToggle($this.mobileNav, null, false, 'init', true);\n\n        // accessibility for menu button\n        $this.mobileNav.attr('role','menu');\n\n        // outline prevention when using mouse\n        $(document).mousedown(function(){\n            $this._outlines(false);\n        });\n\n        $(document).keyup(function(){\n            $this._outlines(true);\n        });\n\n        // menu button click\n        $($this.btn).click(function (e) {\n            e.preventDefault();\n            $this._menuToggle();\n        });\n\n        // click on menu parent\n        $this.mobileNav.on('click', '.' + prefix + '_item', function (e) {\n            e.preventDefault();\n            $this._itemClick($(this));\n        });\n\n        // check for keyboard events on menu button and menu parents\n        $($this.btn).keydown(function (e) {\n            var ev = e || event;\n\n            switch(ev.keyCode) {\n                case Keyboard.ENTER:\n                case Keyboard.SPACE:\n                case Keyboard.DOWN:\n                    e.preventDefault();\n                    if (ev.keyCode !== Keyboard.DOWN || !$($this.btn).hasClass(prefix+'_open')){\n                        $this._menuToggle();\n                    }\n                    \n                    $($this.btn).next().find('[role=\"menuitem\"]').first().focus();\n                    break;\n            }\n\n            \n        });\n\n        $this.mobileNav.on('keydown', '.'+prefix+'_item', function(e) {\n            var ev = e || event;\n\n            switch(ev.keyCode) {\n                case Keyboard.ENTER:\n                    e.preventDefault();\n                    $this._itemClick($(e.target));\n                    break;\n                case Keyboard.RIGHT:\n                    e.preventDefault();\n                    if ($(e.target).parent().hasClass(prefix+'_collapsed')) {\n                        $this._itemClick($(e.target));\n                    }\n                    $(e.target).next().find('[role=\"menuitem\"]').first().focus();\n                    break;\n            }\n        });\n\n        $this.mobileNav.on('keydown', '[role=\"menuitem\"]', function(e) {\n            var ev = e || event;\n\n            switch(ev.keyCode){\n                case Keyboard.DOWN:\n                    e.preventDefault();\n                    var allItems = $(e.target).parent().parent().children().children('[role=\"menuitem\"]:visible');\n                    var idx = allItems.index( e.target );\n                    var nextIdx = idx + 1;\n                    if (allItems.length <= nextIdx) {\n                        nextIdx = 0;\n                    }\n                    var next = allItems.eq( nextIdx );\n                    next.focus();\n                break;\n                case Keyboard.UP:\n                    e.preventDefault();\n                    var allItems = $(e.target).parent().parent().children().children('[role=\"menuitem\"]:visible');\n                    var idx = allItems.index( e.target );\n                    var next = allItems.eq( idx - 1 );\n                    next.focus();\n                break;\n                case Keyboard.LEFT:\n                    e.preventDefault();\n                    if ($(e.target).parent().parent().parent().hasClass(prefix+'_open')) {\n                        var parent = $(e.target).parent().parent().prev();\n                        parent.focus();\n                        $this._itemClick(parent);\n                    } else if ($(e.target).parent().parent().hasClass(prefix+'_nav')){\n                        $this._menuToggle();\n                        $($this.btn).focus();\n                    }\n                    break;\n                case Keyboard.ESCAPE:\n                    e.preventDefault();\n                    $this._menuToggle();\n                    $($this.btn).focus();\n                    break;    \n            }\n        });\n\n        // allow links clickable within parent tags if set\n        if (settings.allowParentLinks && settings.nestedParentLinks) {\n            $('.'+prefix+'_item a').click(function(e){\n                    e.stopImmediatePropagation();\n            });\n        }\n    };\n\n    //toggle menu\n    Plugin.prototype._menuToggle = function (el) {\n        var $this = this;\n        var btn = $this.btn;\n        var mobileNav = $this.mobileNav;\n\n        if (btn.hasClass(prefix+'_collapsed')) {\n            btn.removeClass(prefix+'_collapsed');\n            btn.addClass(prefix+'_open');\n        } else {\n            btn.removeClass(prefix+'_open');\n            btn.addClass(prefix+'_collapsed');\n        }\n        btn.addClass(prefix+'_animating');\n        $this._visibilityToggle(mobileNav, btn.parent(), true, btn);\n    };\n\n    // toggle clicked items\n    Plugin.prototype._itemClick = function (el) {\n        var $this = this;\n        var settings = $this.settings;\n        var data = el.data('menu');\n        if (!data) {\n            data = {};\n            data.arrow = el.children('.'+prefix+'_arrow');\n            data.ul = el.next('ul');\n            data.parent = el.parent();\n            //Separated parent link structure\n            if (data.parent.hasClass(prefix+'_parent-link')) {\n                data.parent = el.parent().parent();\n                data.ul = el.parent().next('ul');\n            }\n            el.data('menu', data);\n        }\n        if (data.parent.hasClass(prefix+'_collapsed')) {\n            data.arrow.html(settings.openedSymbol);\n            data.parent.removeClass(prefix+'_collapsed');\n            data.parent.addClass(prefix+'_open');\n            data.parent.addClass(prefix+'_animating');\n            $this._visibilityToggle(data.ul, data.parent, true, el);\n        } else {\n            data.arrow.html(settings.closedSymbol);\n            data.parent.addClass(prefix+'_collapsed');\n            data.parent.removeClass(prefix+'_open');\n            data.parent.addClass(prefix+'_animating');\n            $this._visibilityToggle(data.ul, data.parent, true, el);\n        }\n    };\n\n    // toggle actual visibility and accessibility tags\n    Plugin.prototype._visibilityToggle = function(el, parent, animate, trigger, init) {\n        var $this = this;\n        var settings = $this.settings;\n        var items = $this._getActionItems(el);\n        var duration = 0;\n        if (animate) {\n            duration = settings.duration;\n        }\n        \n        function afterOpen(trigger, parent) {\n            $(trigger).removeClass(prefix+'_animating');\n            $(parent).removeClass(prefix+'_animating');\n\n            //Fire afterOpen callback\n            if (!init) {\n                settings.afterOpen(trigger);\n            }\n        }\n        \n        function afterClose(trigger, parent) {\n            el.attr('aria-hidden','true');\n            items.attr('tabindex', '-1');\n            $this._setVisAttr(el, true);\n            el.hide(); //jQuery 1.7 bug fix\n\n            $(trigger).removeClass(prefix+'_animating');\n            $(parent).removeClass(prefix+'_animating');\n\n            //Fire init or afterClose callback\n            if (!init){\n                settings.afterClose(trigger);\n            } else if (trigger == 'init'){\n                settings.init();\n            }\n        }\n\n        if (el.hasClass(prefix+'_hidden')) {\n            el.removeClass(prefix+'_hidden');\n             //Fire beforeOpen callback\n            if (!init) {\n                settings.beforeOpen(trigger);\n            }\n            if (settings.animations === 'jquery') {\n                el.stop(true,true).slideDown(duration, settings.easingOpen, function(){\n                    afterOpen(trigger, parent);\n                });\n            } else if(settings.animations === 'velocity') {\n                el.velocity(\"finish\").velocity(\"slideDown\", {\n                    duration: duration,\n                    easing: settings.easingOpen,\n                    complete: function() {\n                        afterOpen(trigger, parent);\n                    }\n                });\n            }\n            el.attr('aria-hidden','false');\n            items.attr('tabindex', '0');\n            $this._setVisAttr(el, false);\n        } else {\n            el.addClass(prefix+'_hidden');\n\n            //Fire init or beforeClose callback\n            if (!init){\n                settings.beforeClose(trigger);\n            }\n\n            if (settings.animations === 'jquery') {\n                el.stop(true,true).slideUp(duration, this.settings.easingClose, function() {\n                    afterClose(trigger, parent)\n                });\n            } else if (settings.animations === 'velocity') {\n                \n                el.velocity(\"finish\").velocity(\"slideUp\", {\n                    duration: duration,\n                    easing: settings.easingClose,\n                    complete: function() {\n                        afterClose(trigger, parent);\n                    }\n                });\n            }\n        }\n    };\n\n    // set attributes of element and children based on visibility\n    Plugin.prototype._setVisAttr = function(el, hidden) {\n        var $this = this;\n\n        // select all parents that aren't hidden\n        var nonHidden = el.children('li').children('ul').not('.'+prefix+'_hidden');\n\n        // iterate over all items setting appropriate tags\n        if (!hidden) {\n            nonHidden.each(function(){\n                var ul = $(this);\n                ul.attr('aria-hidden','false');\n                var items = $this._getActionItems(ul);\n                items.attr('tabindex', '0');\n                $this._setVisAttr(ul, hidden);\n            });\n        } else {\n            nonHidden.each(function(){\n                var ul = $(this);\n                ul.attr('aria-hidden','true');\n                var items = $this._getActionItems(ul);\n                items.attr('tabindex', '-1');\n                $this._setVisAttr(ul, hidden);\n            });\n        }\n    };\n\n    // get all 1st level items that are clickable\n    Plugin.prototype._getActionItems = function(el) {\n        var data = el.data(\"menu\");\n        if (!data) {\n            data = {};\n            var items = el.children('li');\n            var anchors = items.find('a');\n            data.links = anchors.add(items.find('.'+prefix+'_item'));\n            el.data('menu', data);\n        }\n        return data.links;\n    };\n\n    Plugin.prototype._outlines = function(state) {\n        if (!state) {\n            $('.'+prefix+'_item, .'+prefix+'_btn').css('outline','none');\n        } else {\n            $('.'+prefix+'_item, .'+prefix+'_btn').css('outline','');\n        }\n    };\n\n    Plugin.prototype.toggle = function(){\n        var $this = this;\n        $this._menuToggle();\n    };\n\n    Plugin.prototype.open = function(){\n        var $this = this;\n        if ($this.btn.hasClass(prefix+'_collapsed')) {\n            $this._menuToggle();\n        }\n    };\n\n    Plugin.prototype.close = function(){\n        var $this = this;\n        if ($this.btn.hasClass(prefix+'_open')) {\n            $this._menuToggle();\n        }\n    };\n\n    $.fn[mobileMenu] = function ( options ) {\n        var args = arguments;\n\n        // Is the first parameter an object (options), or was omitted, instantiate a new instance\n        if (options === undefined || typeof options === 'object') {\n            return this.each(function () {\n\n                // Only allow the plugin to be instantiated once due to methods\n                if (!$.data(this, 'plugin_' + mobileMenu)) {\n\n                    // if it has no instance, create a new one, pass options to our plugin constructor,\n                    // and store the plugin instance in the elements jQuery data object.\n                    $.data(this, 'plugin_' + mobileMenu, new Plugin( this, options ));\n                }\n            });\n\n        // If is a string and doesn't start with an underscore or 'init' function, treat this as a call to a public method.\n        } else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {\n\n            // Cache the method call to make it possible to return a value\n            var returns;\n\n            this.each(function () {\n                var instance = $.data(this, 'plugin_' + mobileMenu);\n\n                // Tests that there's already a plugin-instance and checks that the requested public method exists\n                if (instance instanceof Plugin && typeof instance[options] === 'function') {\n\n                    // Call the method of our plugin instance, and pass it the supplied arguments.\n                    returns = instance[options].apply( instance, Array.prototype.slice.call( args, 1 ) );\n                }\n            });\n\n            // If the earlier cached method gives a value back return the value, otherwise return this to preserve chainability.\n            return returns !== undefined ? returns : this;\n        }\n    };\n}(jQuery, document, window));\n"]}